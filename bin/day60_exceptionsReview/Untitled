12/06/2019
Topic: Exceptions Reveiw
			checked & unchecked exceptions
			try & catch & finally blocks (single catch & mutlicatch)
			throws & throw keywords
			custom exception class

package name: day60_ExceptionsReveiw

checked exception: exceptions that happens during compile time.
					unwanted code, compiler is not happy with, compile error
					 MUST be handled immediately

					 Ex: FileNotFoundException
					 	 Interrupted Exception
					 	 IOException
					 	 ....

unchecked exception: exceptions that occure during runtime.
						unexpected event .

				all the unchecked exceptions are extending RunTimeException class

				RuntimeException is parent class of all unchecked exception

				Ex: NoSuchElementexception
					WebDriverException
					TimeOutException
					staleElementException
						...


1. try & catch blocks: used for handling exceptions

			try & catch MUST be declared together
			finally block is optional
				
				try{
					exception code;
				} catch(Exception e){
						statements;
				}finally {
					statement;
				}

		try block: gets executed if the exception is checked

		catch: gets executed if unexpected event occurs(unchecked)

		finally: always gets executed



multi-catch blocks:
	Condition: parent exception type cannot be before sub exception type
			   cannot be conflicted

			
			try{

			} catch(exception1 e){

			}catch(exception2 e){

			}
			....

			Ex:
				try{

				} catch(RuntimeException e){

				}catch(ArithmaticException e){

				}
				compile error, parent exception type needs to be after the sub exception type


				try{
					exception code;
				}catch(NullPointerException e){

				} catch(ClassCastException e){

				}
				 compiles successfully,


				 if the exception is checked exception, we should not be using multi catch block.
				 	checked exceptions needs to be handled right away


throws keyword: used for exception handling
				MUST be used with method signature
				 	public void method() throws ExceptionType {  }




next week' topic: Excel file Reader
				  Data Structure: Collections
