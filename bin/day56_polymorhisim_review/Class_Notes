11/25/2019
Topic: Polymorphisim Reveiw
       Type Castings:
                UpCasting
       OOP Summary
Agenda:
    Morning: Java
    Afternoon : Selenium
package name: day56_Polymorhisim
Polymorphisim:  occures when a super class/interface is reference and object from is created from child class
            A   extends   B
            sub          super
            B        obj       =   new     A()
        ref-type   ref-name           object
        reference type decides what can be accessbile
        child class cannot be the reference to parent class' object.
        if we make the abstract class as reference, object MUST be creatd from sub class(non abstract)
        if we make the interface as reference, object MUST be created from the classes(Non Abstract) that's impleenting the interface 
        A obj11 = new B();  
            obj11.methodA();   // from B clas
        //  if a method is exist in both reference type and object, the overridden one gets executed
            
        obj11.methodC();
            // if the method is not being overriddedn, then the reference type' method gets executed
            
        WebDriver driver = new ChromeDriver();
                driver.get("URL")  // opens the chrome browser,  overridden
interface: WebDriver, WebElemnet, JavaScriptExecuter, TakeScreenShot...
IS A: inherited/implemneted relation between class
        
        Dog extends Animal
        PitBull extends Dog
        Dog IS An Animal
        Pitbull IS A Dog
        PitBull IS An Animal
Has A:
        class Car{
            Engine obj = new Engione();
        }
        Car HAS An Engine
        class Zoo {
            Lion li = new Lion();
            Tiger ti = new Tiger();
            ....
        }
        Zoo Has A lion
        Zoo Has A tiger
method Overriding: same method name , same parameter
            only the instance method can be overridden
            HAS to be overridden in the sub class
            Cannot be private, static, final
            access modifier needs to be same or more visible
            return-type HAS to be same
            @Override has to be applicable

            
            
Upcasting

		            